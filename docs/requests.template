====================
Request Reference
====================

********
Requests
********
{% for request_name, request in requests.items()|sort %}

.. _request-{{ request_name.lower() }}:

{{ request_name }}
-------------------------------
{% if request.status == 'deprecated' %}
.. warning:: This request has been deprecated by nba.com.
{% endif %}
{% if request.status == 'restricted' %}
.. warning:: This request has been restricted by nba.com.
{% endif %}
{% if 'description' in request -%}
    {{ request.description }}
{% endif %}

Required Parameters:
  {{ request.params|without_default(params)|sort|format_param_links|join(", ") }}

Optional Parameters:
  {{ request.params|with_default(params)|sort|format_param_links|join(", ") }}

{% if request['response-format'] == 'result-set' %}
Return Fields:
{% for field in request.returns %}
  ``'{{ field[0] }}'``
    {{ field[1]|sort|format_string_literals|join(", ") }}

{% endfor %}
{% endif %}
    
{% endfor %}

**********
Parameters
**********
{% for param_name, param in params.items()|sort %}

.. _param-{{ param_name.lower() }}:

{{ param_name }}
---------------------
{% if 'description' in param -%}
    {{ param.description }}
{% endif %}

Type:
  {{ param.type|format_param_type_link }}

{% if param.type in ['enum', 'enum-mapped'] %}
Options:
  {{ param.options|format_string_literals|join(", ") }}

{% endif %}
{% if 'default' in param %}
Default:
  {% if param.default %}``{{ param.default }}``{% else %}``''``{% endif %}

{% endif %}
{% endfor %}

***************
Parameter Types
***************

.. _type-integer:

Integer
-------

Parameters of type Integer accept standard Python integers.

.. _type-boolean:

Boolean
-------

Parameters of type Enumerated accept standard Python boolean values ``True`` and
``False``.

.. _type-enumerated:

Enumerated
----------

Parameters of type Enumerated accept Python strings. Each parameter has a set
of string values that it allows as options, see documentation for the
particular parameter to see what those values are. Some enumerated parameters
allow empty strings; semantically this indicates that the parameter is left
unspecified.

.. _type-date:

Date
----

Parameters of type Date accept Python ``datetime.date`` objects.

.. _type-season:

Season
------

Parameters of type Season accept four digit integers (i.e., integers between
1000 and 9999). Values should correspond to the year that a season begins; for
example, the value 2008 indicates the 2008-2009 NBA season.
